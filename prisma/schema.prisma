// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id         Int       @id @default(autoincrement())
  name       String
  email      String    @unique
  password   String
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())
  deleted_at DateTime?

  shortenerUrls ShortenerUrls[] @relation("UserShortenerUrls")
  workspaces    Workspaces[]    @relation("UserWorkspaces")
  tags          Tags[]          @relation("UserTags")
}

model Workspaces {
  id         String    @id @default(uuid())
  name       String
  slug       String    @unique
  owner_id   Int
  created_at DateTime  @default(now())
  update_at  DateTime  @default(now())
  deleted_at DateTime?

  shortenerUrls ShortenerUrls[] @relation("WorkspaceShortenerUrls")
  ownerUser     Users           @relation("UserWorkspaces", fields: [owner_id], references: [id])
}

model ShortenerUrls {
  id            Int       @id @default(autoincrement())
  users_id      Int?
  workspaces_id String?
  short_code    String    @unique
  origin_url    String
  shorten_url   String
  comments      String?
  created_at    DateTime  @default(now())
  update_at     DateTime  @default(now())
  deleted_at    DateTime?
  expires_at    DateTime?

  user      Users?      @relation("UserShortenerUrls", fields: [users_id], references: [id], onDelete: Cascade)
  workspace Workspaces? @relation("WorkspaceShortenerUrls", fields: [workspaces_id], references: [id], onDelete: Cascade)
  tags      Tags[]      @relation("ShortenerUrlsTags")
  clicks    Clicks[]    @relation("ShortenerUrlsClicks")
}

model Clicks {
  id               Int      @id @default(autoincrement())
  shortenerUrls_id Int
  created_at       DateTime @default(now())

  shortenerUrls ShortenerUrls @relation("ShortenerUrlsClicks", fields: [shortenerUrls_id], references: [id], onDelete: Cascade)
}

model Tags {
  id       Int    @id @default(autoincrement())
  users_id Int
  name     String @unique

  Users         Users?          @relation("UserTags", fields: [users_id], references: [id])
  shortenerUrls ShortenerUrls[] @relation("ShortenerUrlsTags")
}
